package GUI;

import DataAccess.Domain.Certification;
import DataAccess.Domain.Employee;
import DataAccess.IRepository;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

public class MainGui {

    public JPanel panel;
    public JButton showEmployeeButton;
    public JButton showCertificationButton;
    public JTable empTable;
    public JTable certTable;
    private JButton editEmployeeButton;
    private JButton editCertificationButton;

    public MainGui(IRepository<Employee> crudEmp, IRepository<Certification> crudCert) {
        SetDependency(crudEmp, crudCert);
    }

    private void SetDependency(IRepository<Employee> crudEmp, IRepository<Certification> crudCert) {
        SetDependencyEmployee(crudEmp);
        SetDependencyCertification(crudCert);

    }

    protected void SetDependencyEmployee(IRepository<Employee> crud) {
        showEmployeeButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                ArrayList<Employee> data = crud.ReadAll();
                DefaultTableModel tableModel = new DefaultTableModel(data.size(), 3);
                empTable.setModel(tableModel);

                Object rowData[] = new Object[data.size() * 3];
                for (int i = 0; i < data.size(); i++) {
                    rowData[0] = data.get(i).Id;
                    rowData[1] = data.get(i).FirstName;
                    rowData[2] = data.get(i).LastName;
                    tableModel.addRow(rowData);
                }
            }
        });
        editEmployeeButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                JFrame frame = new JFrame("EmployeeEdit");
                EmployeeEdit employeeEdit = new EmployeeEdit(crud);

                frame.setContentPane(employeeEdit.panel1);
                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                frame.pack();
                frame.setVisible(true);
            }
        });
    }

    protected void SetDependencyCertification(IRepository<Certification> crud) {
        showCertificationButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                System.out.println("event cer");

                ArrayList<Certification> data = crud.ReadAll();
                DefaultTableModel tableModel = new DefaultTableModel(data.size(), 3);
                certTable.setModel(tableModel);

                Object rowData[] = new Object[data.size() * 3];
                for (int i = 0; i < data.size(); i++) {
                    rowData[0] = data.get(i).Id;
                    rowData[1] = data.get(i).EmployeeId;
                    rowData[2] = data.get(i).Information;
                    tableModel.addRow(rowData);
                }
            }
        });
        editCertificationButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                JFrame frame = new JFrame("Certification");
                CertificationEdit certification = new CertificationEdit(crud);

                frame.setContentPane(certification.panel);
                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                frame.pack();
                frame.setVisible(true);
            }
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        panel = new JPanel();
        panel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(5, 2, new Insets(0, 0, 0, 0), -1, -1));
        panel1.add(panel, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        showEmployeeButton = new JButton();
        showEmployeeButton.setText("Show employee");
        panel.add(showEmployeeButton, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        empTable = new JTable();
        panel.add(empTable, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 3, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        certTable = new JTable();
        panel.add(certTable, new com.intellij.uiDesigner.core.GridConstraints(3, 1, 2, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        showCertificationButton = new JButton();
        showCertificationButton.setText("Show certification");
        panel.add(showCertificationButton, new com.intellij.uiDesigner.core.GridConstraints(3, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        editEmployeeButton = new JButton();
        editEmployeeButton.setEnabled(true);
        editEmployeeButton.setText("Edit employee");
        panel.add(editEmployeeButton, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        editCertificationButton = new JButton();
        editCertificationButton.setEnabled(true);
        editCertificationButton.setText("Edit certification");
        panel.add(editCertificationButton, new com.intellij.uiDesigner.core.GridConstraints(4, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
    }
}
